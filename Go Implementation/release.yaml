name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to release'
        required: true

permissions:
  contents: write
  packages: write
  id-token: write

env:
  REGISTRY: ghcr.io

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-go@v5
        with:
          go-version: '1.21'
          
      - name: Run tests
        run: |
          go test -v ./...
          go vet ./...
          
  release:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - uses: actions/setup-go@v5
        with:
          go-version: '1.21'
          
      - name: Install cosign
        uses: sigstore/cosign-installer@v3
        
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CHOCOLATEY_API_KEY: ${{ secrets.CHOCOLATEY_API_KEY }}
          HOMEBREW_TAP_GITHUB_TOKEN: ${{ secrets.HOMEBREW_TAP_TOKEN }}
          COSIGN_EXPERIMENTAL: 1
          
  update-package-managers:
    needs: release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: Homebrew
            repo: SCHWAI-AI/homebrew-tap
          - name: Scoop
            repo: SCHWAI-AI/scoop-bucket
    steps:
      - name: Trigger ${{ matrix.name }} update
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.PACKAGE_UPDATE_TOKEN }}
          repository: ${{ matrix.repo }}
          event-type: package-update
          client-payload: '{"version": "${{ github.ref_name }}"}'
          
  publish-winget:
    needs: release
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install WinGetCreate
        run: |
          iwr https://aka.ms/wingetcreate/latest -OutFile wingetcreate.exe
          
      - name: Update WinGet manifest
        run: |
          $version = "${{ github.ref_name }}".TrimStart("v")
          $urls = @(
            "https://github.com/SCHWAI-AI/aicommit/releases/download/${{ github.ref_name }}/aicommit_Windows_x86_64.zip",
            "https://github.com/SCHWAI-AI/aicommit/releases/download/${{ github.ref_name }}/aicommit_Windows_i386.zip"
          )
          
          ./wingetcreate.exe update SCHWAI.AICommit `
            --version $version `
            --urls $urls `
            --token ${{ secrets.GITHUB_TOKEN }} `
            --submit
            
  notify:
    needs: [release, update-package-managers]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Send Discord notification
        if: ${{ secrets.DISCORD_WEBHOOK }}
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          title: "AICommit ${{ github.ref_name }} Released!"
          description: |
            ðŸš€ New version available!
            
            [View Release](https://github.com/SCHWAI-AI/aicommit/releases/tag/${{ github.ref_name }})
          color: 0x00ff00
          
      - name: Send Slack notification
        if: ${{ secrets.SLACK_WEBHOOK }}
        uses: 8398a7/action-slack@v3
        with:
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}
          status: ${{ job.status }}
          text: 'AICommit ${{ github.ref_name }} has been released!'
          
  docker-multiarch:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/schwai-ai/aicommit
          tags: |
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable={{is_default_branch}}
            
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
